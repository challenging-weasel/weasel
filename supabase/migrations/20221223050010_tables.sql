create table "public"."challenges" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "deleted_at" timestamp with time zone,
    "title" text,
    "desc" text,
    "public_id" text not null,
    "manager_id" bigint not null,
    "config" jsonb not null default '{"type": "init"}'::jsonb
);


alter table "public"."challenges" enable row level security;

create table "public"."confirmations" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "deleted_at" timestamp with time zone,
    "images" jsonb default '[]'::jsonb,
    "status" text not null,
    "date" timestamp with time zone not null,
    "title" text,
    "desc" text,
    "creator_id" bigint not null,
    "participation_id" bigint not null
);


alter table "public"."confirmations" enable row level security;

create table "public"."participations" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "deleted_at" timestamp with time zone,
    "profile_id" bigint not null,
    "challenge_id" bigint not null,
    "title" text,
    "desc" text,
    "config" jsonb not null default '{"type": "init"}'::jsonb,
    "status" text not null default 'waiting_for_approval'::text
);


alter table "public"."participations" enable row level security;

create table "public"."profiles" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "deleted_at" timestamp with time zone default now(),
    "name" text,
    "desc" text,
    "public_id" text not null,
    "user_id" uuid
);


alter table "public"."profiles" enable row level security;

CREATE UNIQUE INDEX challenge_id_key ON public.challenges USING btree (id);

CREATE UNIQUE INDEX challenge_pkey ON public.challenges USING btree (id);

CREATE UNIQUE INDEX challenge_public_id_key ON public.challenges USING btree (public_id);

CREATE UNIQUE INDEX confirmations_id_key ON public.confirmations USING btree (id);

CREATE UNIQUE INDEX confirmations_pkey ON public.confirmations USING btree (id, creator_id, participation_id);

CREATE UNIQUE INDEX participations_id_key ON public.participations USING btree (id);

CREATE UNIQUE INDEX participations_pkey ON public.participations USING btree (id, profile_id, challenge_id);

CREATE UNIQUE INDEX profiles_id_key ON public.profiles USING btree (id);

CREATE UNIQUE INDEX profiles_pkey ON public.profiles USING btree (id);

alter table "public"."challenges" add constraint "challenge_pkey" PRIMARY KEY using index "challenge_pkey";

alter table "public"."confirmations" add constraint "confirmations_pkey" PRIMARY KEY using index "confirmations_pkey";

alter table "public"."participations" add constraint "participations_pkey" PRIMARY KEY using index "participations_pkey";

alter table "public"."profiles" add constraint "profiles_pkey" PRIMARY KEY using index "profiles_pkey";

alter table "public"."challenges" add constraint "challenge_id_key" UNIQUE using index "challenge_id_key";

alter table "public"."challenges" add constraint "challenge_public_id_key" UNIQUE using index "challenge_public_id_key";

alter table "public"."challenges" add constraint "challenges_manager_id_fkey" FOREIGN KEY (manager_id) REFERENCES profiles(id) not valid;

alter table "public"."challenges" validate constraint "challenges_manager_id_fkey";

alter table "public"."confirmations" add constraint "confirmations_creator_id_fkey" FOREIGN KEY (creator_id) REFERENCES profiles(id) not valid;

alter table "public"."confirmations" validate constraint "confirmations_creator_id_fkey";

alter table "public"."confirmations" add constraint "confirmations_id_key" UNIQUE using index "confirmations_id_key";

alter table "public"."confirmations" add constraint "confirmations_participation_id_fkey" FOREIGN KEY (participation_id) REFERENCES participations(id) not valid;

alter table "public"."confirmations" validate constraint "confirmations_participation_id_fkey";

alter table "public"."participations" add constraint "participations_challenge_id_fkey" FOREIGN KEY (challenge_id) REFERENCES challenges(id) not valid;

alter table "public"."participations" validate constraint "participations_challenge_id_fkey";

alter table "public"."participations" add constraint "participations_id_key" UNIQUE using index "participations_id_key";

alter table "public"."participations" add constraint "participations_profile_id_fkey" FOREIGN KEY (profile_id) REFERENCES profiles(id) not valid;

alter table "public"."participations" validate constraint "participations_profile_id_fkey";

alter table "public"."profiles" add constraint "profiles_id_key" UNIQUE using index "profiles_id_key";

alter table "public"."profiles" add constraint "profiles_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."profiles" validate constraint "profiles_user_id_fkey";


